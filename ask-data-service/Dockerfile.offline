# Ask Data AI - 内网离线构建Dockerfile
# 适用于无外网访问的环境

FROM python:3.11-slim

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV DOCKER_HOST_IP=0.0.0.0
ENV ASK_DATA_PORT=8000
ENV PYTHONIOENCODING=UTF-8

# 安装系统依赖（使用预下载的包或内网源）
# 如果有内网APT源，请修改为内网地址
# RUN sed -i 's/deb.debian.org/your-internal-mirror.com/g' /etc/apt/sources.list.d/debian.sources

# 跳过apt update，使用基础镜像自带的包
RUN apt-get update || true && apt-get install -y \
    gcc \
    g++ \
    curl \
    || true && rm -rf /var/lib/apt/lists/* || true

# 复制预下载的Python包（离线模式）
# 请先运行: pip download -r requirements.txt -d ./packages
COPY packages/ /tmp/packages/
COPY requirements.txt .

# 离线安装Python依赖
RUN pip install --no-index --find-links /tmp/packages -r requirements.txt || \
    pip install --no-deps -r requirements.txt

# 清理临时包文件
RUN rm -rf /tmp/packages

# 复制项目文件
COPY . .

# 创建必要的目录
RUN mkdir -p uploads exports logs

# 设置权限
RUN chmod 755 logs

# 暴露端口
EXPOSE 8000

# 健康检查（内网环境可能需要调整）
HEALTHCHECK --interval=60s --timeout=30s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:8000/api/ask-data/system/health || exit 1

# 启动命令
CMD ["python", "app.py"] 