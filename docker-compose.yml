version: '3.8'

services:
  # 微服务应用
  microservice-ds:
#    image: microservice-ds:1.0
    build:
      context: ./service
      dockerfile: Dockerfile
    container_name: microservice-ds
    ports:
      - "${BACKEND_PORT}:9091"
    volumes:
#      - ./config/java:/app/config
      - ./log:/app/log
      - ./preview:/app/preview
    environment:
      - JAVA_OPTS=${JAVA_OPTS}
      - BACKEND_PORT=${BACKEND_PORT}
      - DIFY_URL=${DIFY_URL}
    restart: unless-stopped
    networks:
      - microservice-network

  postgres:
    image: postgres:12
    container_name: diit-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    networks:
      - microservice-network
    restart: always

  operation-backend:
    build:
      context: ./operation/system-server
      dockerfile: Dockerfile
    # image: operation-docker-backend:latest
    container_name: diit-operation-backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - OPERATION_BACKEND_CONTEXT_PATH=${OPERATION_BACKEND_CONTEXT_PATH}
    ports:
      - "${OPERATION_BACKEND_PORT}:32003"
    depends_on:
      - postgres
    networks:
      - microservice-network
    restart: always

  # Nginx服务
  frontend:
    image: nginx:alpine
    container_name: microservice-nginx
    ports:
      - "${FRONTEND_PORT}:80"
    volumes:
      - ./update-config.sh:/tmp/update-config.sh:ro
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web/demo:/usr/share/nginx/html
      - ./log/nginx:/var/log/nginx
      - ./.env:/app/.env
      - ./preview:/app/preview
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - DOCKER_HOST_IP=${DOCKER_HOST_IP:-192.168.11.205}
    command: >
      /bin/sh -c "
        sleep 2;  # 等待文件系统挂载完成
        cp /tmp/update-config.sh /docker-entrypoint.d/update-config.sh;
        chmod +x /docker-entrypoint.d/update-config.sh;
        /bin/sh /docker-entrypoint.d/update-config.sh;
        nginx -g 'daemon off;'
      "
    depends_on:
      - microservice-ds
    restart: unless-stopped
    networks:
      - microservice-network

  operation-frontend:
    build:
      context: ./operation/nginx
      dockerfile: Dockerfile
    container_name: diit-operation-frontend
    ports:
      - "${OPERATION_FRONTEND_PORT}:80"
    depends_on:
      - operation-backend
    networks:
      - microservice-network
    restart: always

networks:
  microservice-network:
    driver: bridge 