version: '3.8'

services:
  # 微服务应用
  microservice-ds:
#    image: microservice-ds:1.0
    build:
      context: ./service
      dockerfile: Dockerfile
    container_name: microservice-ds
    ports:
      - "${BACKEND_PORT}:9091"
    volumes:
      - ./log:/app/log
      - ./preview:/app/preview
    env_file:
      - ./.env
    environment:
      - JAVA_OPTS=${JAVA_OPTS}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
    restart: "no"
    networks:
      - microservice-network

  ask-data-service:
    build:
      context: ./ask-data-service
      dockerfile: Dockerfile
    container_name: ask-data-service
    ports:
      - "${ASK_DATA_PORT}:8000"
    volumes:
      - ./log/ask-data-service/log:/app/log
      - ./log/ask-data-service/pandasai.log:/app/pandasai.log
      - ./volumes/ask-data-service/datasets:/app/datasets
      - ./volumes/ask-data-service/exports:/app/exports
    env_file:
      - ./.env
    networks:
      - microservice-network
    restart: "no"

  postgres:
    image: postgres:12
    container_name: diit-postgres
    env_file:
      - ./.env
    environment:
      - POSTGRES_PORT=5432
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    networks:
      - microservice-network
    restart: always

  operation-backend:
    build:
      context: ./operation/system-server
      dockerfile: Dockerfile
    # image: operation-docker-backend:latest
    container_name: diit-operation-backend
    env_file:
      - ./.env
    ports:
      - "${OPERATION_BACKEND_PORT}:32003"
    depends_on:
      - postgres
    networks:
      - microservice-network
    restart: "no"

  # Nginx服务
  frontend:
    image: nginx:alpine
    container_name: microservice-nginx
    ports:
      - "${FRONTEND_PORT}:80"
    volumes:
      - ./update-config.sh:/tmp/update-config.sh:ro
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/mime.types:/etc/nginx/mime.types:ro
      - ./web/demo:/usr/share/nginx/html/ai_center
      - ./log/nginx:/var/log/nginx
      - ./.env:/app/.env
      - ./preview:/app/preview
    env_file:
      - ./.env
    command: >
      /bin/sh -c "
        nginx -g 'daemon off;'
      "
    depends_on:
      - microservice-ds
    restart: "no"
    networks:
      - microservice-network

  operation-frontend:
    build:
      context: ./operation/nginx
      dockerfile: Dockerfile
    container_name: diit-operation-frontend
    env_file:
      - ./.env
    ports:
      - "${OPERATION_FRONTEND_PORT}:80"
    depends_on:
      - operation-backend
    networks:
      - microservice-network
    restart: always

networks:
  microservice-network:
    driver: bridge 